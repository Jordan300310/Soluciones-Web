CREATE DATABASE fyj_erp_dev;

-- ======================================
--           TABLAS DE BASE
-- ======================================

CREATE TABLE persona (
  id_persona     BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
  nom_persona    VARCHAR(150) NOT NULL,
  apat_persona   VARCHAR(100),
  amat_persona   VARCHAR(100),
  dni_persona    VARCHAR(15) UNIQUE,
  cel_persona    VARCHAR(20),
  email_persona  VARCHAR(150),
  feN_persona    DATE
);

-- ======================================
--           TABLAS DE USUARIOS
-- ======================================

CREATE TABLE usuario (
  id_usuario SERIAL PRIMARY KEY,
  id_persona BIGINT REFERENCES persona(id_persona),
  tipo VARCHAR(20) CHECK (tipo IN ('cliente', 'empleado')),
  username VARCHAR(50) UNIQUE NOT NULL,
  password VARCHAR(255) NOT NULL
);

CREATE TABLE cliente (
  id_cliente SERIAL PRIMARY KEY,
  id_persona BIGINT REFERENCES persona(id_persona),
  estado BOOLEAN DEFAULT TRUE  -- TRUE = activo, FALSE = inactivo
);

CREATE TABLE empleado (
  id_empleado SERIAL PRIMARY KEY,
  id_persona BIGINT REFERENCES persona(id_persona),
  cargo VARCHAR(100),
  sueldo NUMERIC(10,2),
  estado BOOLEAN DEFAULT TRUE  -- TRUE = activo, FALSE = inactivo
);

CREATE TABLE proveedor (
  id_proveedor SERIAL PRIMARY KEY,
  id_persona BIGINT REFERENCES persona(id_persona),
  razon_social VARCHAR(150),
  ruc VARCHAR(15) UNIQUE,
  estado BOOLEAN DEFAULT TRUE  -- TRUE = activo, FALSE = inactivo
);

-- ======================================
--           TABLAS DE ESTADOS
-- ======================================

CREATE TABLE estado_pedido (
  id_estado_pedido SERIAL PRIMARY KEY,
  nombre_estado VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE estado_compra (
  id_estado_compra SERIAL PRIMARY KEY,
  nombre_estado VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE estado_pago (
  id_estado_pago SERIAL PRIMARY KEY,
  nombre_estado VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE estado_envio (
  id_estado_envio SERIAL PRIMARY KEY,
  nombre_estado VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE estado_ticket (
  id_estado_ticket SERIAL PRIMARY KEY,
  nombre_estado VARCHAR(50) NOT NULL UNIQUE
);

-- ======================================
--           TABLAS DE OPERACIONES
-- ======================================

CREATE TABLE producto (
  id_producto SERIAL PRIMARY KEY,
  nombre_producto VARCHAR(150) NOT NULL,
  descripcion TEXT,
  precio NUMERIC(10,2) NOT NULL,
  stock INT NOT NULL,
  id_proveedor INT REFERENCES proveedor(id_proveedor),
  id_marca INT REFERENCES marca(id_marca) ON UPDATE CASCADE ON DELETE SET NULL,
  id_categoria INT REFERENCES categoria(id_categoria) ON UPDATE CASCADE ON DELETE SET NULL,
  imagen_url VARCHAR(500),
  estado BOOLEAN DEFAULT TRUE
);

CREATE TABLE marca (
  id_marca      SERIAL PRIMARY KEY,
  nombre_marca  VARCHAR(120) NOT NULL UNIQUE,
  estado        BOOLEAN DEFAULT TRUE
);

CREATE TABLE categoria (
  id_categoria      SERIAL PRIMARY KEY,
  nombre_categoria  VARCHAR(120) NOT NULL UNIQUE,
  estado            BOOLEAN DEFAULT TRUE
);


CREATE TABLE pedido (
  id_pedido SERIAL PRIMARY KEY,
  id_cliente INT REFERENCES cliente(id_cliente),
  fecha_pedido TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  id_estado_pedido INT REFERENCES estado_pedido(id_estado_pedido),
  total NUMERIC(14,2) NOT NULL
);

CREATE TABLE detalle_pedido (
  id_detalle SERIAL PRIMARY KEY,
  id_pedido INT REFERENCES pedido(id_pedido),
  id_producto INT REFERENCES producto(id_producto),
  cantidad INT NOT NULL,
  subtotal NUMERIC(14,2) NOT NULL
);

CREATE TABLE compra (
  id_compra SERIAL PRIMARY KEY,
  id_empleado INT REFERENCES empleado(id_empleado),
  id_proveedor INT REFERENCES proveedor(id_proveedor),
  fecha_compra TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  id_estado_compra INT REFERENCES estado_compra(id_estado_compra),
  total NUMERIC(14,2) NOT NULL
);

CREATE TABLE detalle_compra (
  id_detalle SERIAL PRIMARY KEY,
  id_compra INT REFERENCES compra(id_compra),
  id_producto INT REFERENCES producto(id_producto),
  cantidad INT NOT NULL,
  subtotal NUMERIC(14,2) NOT NULL
);

CREATE TABLE pago (
  id_pago SERIAL PRIMARY KEY,
  id_pedido INT REFERENCES pedido(id_pedido),
  monto NUMERIC(14,2) NOT NULL,
  metodo_pago VARCHAR(50),
  fecha_pago TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  id_estado_pago INT REFERENCES estado_pago(id_estado_pago)
);

CREATE TABLE envio (
  id_envio SERIAL PRIMARY KEY,
  id_pedido INT REFERENCES pedido(id_pedido),
  direccion_entrega VARCHAR(255),
  fecha_envio TIMESTAMP,
  id_estado_envio INT REFERENCES estado_envio(id_estado_envio)
);

-- ======================================
--           TABLAS DE TICKETS
-- ======================================

CREATE TABLE ticket (
  id_ticket SERIAL PRIMARY KEY,
  id_cliente INT REFERENCES cliente(id_cliente),
  asunto VARCHAR(150),
  descripcion TEXT,
  fecha_creacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  id_estado_ticket INT REFERENCES estado_ticket(id_estado_ticket)
);

-- Tabla de atención del ticket (empleado que lo atendió)
CREATE TABLE atencion_ticket (
  id_atencion SERIAL PRIMARY KEY,
  id_ticket INT REFERENCES ticket(id_ticket),
  id_empleado INT REFERENCES empleado(id_empleado),
  fecha_atencion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  observaciones TEXT
);

-- ======================================
--           EJEMPLOS DE ESTADOS
-- ======================================

INSERT INTO estado_pedido (nombre_estado) VALUES ('EN PROCESO'), ('EN CAMINO'), ('ENTREGADO'), ('CANCELADO');
INSERT INTO estado_compra (nombre_estado) VALUES ('EN REVISIÓN'), ('APROBADA'), ('RECHAZADA');
INSERT INTO estado_pago (nombre_estado) VALUES ('PENDIENTE'), ('PAGADO'), ('RECHAZADO');
INSERT INTO estado_envio (nombre_estado) VALUES ('PREPARANDO'), ('EN RUTA'), ('ENTREGADO');
INSERT INTO estado_ticket (nombre_estado) VALUES ('ABIERTO'), ('EN ATENCIÓN'), ('CERRADO');


-- ======================================
-- marca - categoria
-- ======================================
CREATE TABLE marca (
  id_marca      SERIAL PRIMARY KEY,
  nombre_marca  VARCHAR(120) NOT NULL UNIQUE,
  estado        BOOLEAN DEFAULT TRUE
);

CREATE TABLE categoria (
  id_categoria      SERIAL PRIMARY KEY,
  nombre_categoria  VARCHAR(120) NOT NULL UNIQUE,
  estado            BOOLEAN DEFAULT TRUE
);

ALTER TABLE producto
ADD COLUMN imagen_url VARCHAR(500),

ALTER TABLE producto
  ADD COLUMN id_marca INT,
  ADD COLUMN id_categoria INT;

ALTER TABLE producto
  ADD CONSTRAINT fk_producto_marca
    FOREIGN KEY (id_marca)
    REFERENCES marca(id_marca)
    ON UPDATE CASCADE
    ON DELETE SET NULL,
  ADD CONSTRAINT fk_producto_categoria
    FOREIGN KEY (id_categoria)
    REFERENCES categoria(id_categoria)
    ON UPDATE CASCADE
    ON DELETE SET NULL;

  ALTER TABLE detalle_pedido
  ADD COLUMN precio_unitario NUMERIC(14,2);